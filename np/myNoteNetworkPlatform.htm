<html>

<head>
    <title>~</title>
    <META http-equiv="Content-Type" content="text/html;" charset="UTF-8">
    <base target="_blank" />
    <META name="viewport" content="width=device-witdh, initial-scale=1, maximum-scale=1, user-scale=0">


    <!-------------- jq --------------------->
    <script src="https://wdingbox.github.io/ham12/jq/jquery-2_1_3.min.js"></script>
    <!-------------------------------------------->
    <script src="https://wdingbox.github.io/bible_obj_lib/jsdb/jsBibleStruct/All_Max_struct_json.js"
        language="javascript"></script>
    <script src="https://bsnp21.github.io/bb/np/js/UtiLib.js"></script>

    <script src="https://bsnp21.github.io/bb/np/js/BsnpRestApi.js"></script>
    <script src="https://bsnp21.github.io/bb/np/js/BsnpRestConst.js"></script>
    <!-------------------------------------------->

    <script src="https://bsnpghrepolist.github.io/admin/account/u_e_Note_json.js"></script>
    <script src="https://bsnpghrepolist.github.io/admin/account/pub_users_json.js"></script>
    <!-------------------------------------------->
    <style>
        body {
            padding-top: 100px;
        }

        #usrname {
            position: fixed;
            top: 10px;
            right: 10px;
            background-color: gray;
            padding: 4px 10px 4px 10px;
        }

        .ctrpanel {
            z-index: 1;
            position: fixed;
            top: 34px;
            right: 10px;
            background-color: gray;
            display: none;
        }

        #input,
        #output {
            background-color: black;
            color: white;
            overflow: auto
        }


        #idbtn_exec_cmd {
            background-color: grey;
        }

        .white_space_nowrap {
            white-space: nowrap;
        }

        .editorinfo {
            background-color: lightblue;
            display: inline-block;
            white-space: nowrap;
            width: 100%;
        }

        .minitxt {
            float: left;
            white-space: nowrap;
        }

        .minicon {
            float: right;

            white-space: nowrap;
        }

        .scorenum {
            float: right;
            white-space: nowrap;
        }

        .usrbar {
            background-color: rgb(94, 135, 172);
        }


        .floatrightside {
            float: right;
        }

        .heart {
            padding: 0 10px 0 10px;
            cursor:pointer;
        }

        .heart_red {
            color: red;
        }

        #usrs_note_list {
            width: 100%;
        }

        div[contenteditable='true'] {
            background-color: antiquewhite;
            width: 100%;
            height: 300px;
            overflow: scroll;
        }

        .plaintxt {
            width: 100%;
            height: 300px;
            xvisibility: hidden;
            display: none;
        }

        #robout {
            width: 100%;
            height: 300px;
            color:white
        }

        .RunningState {
            border: 3px solid red;

        }

        .private_usr {
            color: darkgray;
            pointer-events: none;
            cursor: not-allowed;
        }
        .usrnamelabel{
            padding-left: 5px;
            padding-right: 5px;
            cursor: context-menu;
        }
        .notetoggle{
            cursor:ns-resize;
        }
        .wordtot{
            padding-left: 10px;
            padding-right: 10px;
            cursor: pointer;
        }
    </style>
</head>

<body __onbeforeunload="return 'leave?';">
    <a id="usrname">usrname</a>
    <div class="ctrpanel">
        <table>
            <tbody>
           
            </tbody>
        </table>

    </div>



    <h></h><input id="inpBCV" placeholder="Fellowship Group ID"></input> <button
        onclick="ajx_gen_table()">refresh</button><button id="toggleCollapse">toggleCollapse</button>
    <input type="radio" name="showmode" id="defaultmode"><label for="defaultmode">default</label>
    <input type="radio" name="showmode" id="showall"><label for="showall">show all</label>
    <input type="radio" name="showmode" id="favoriteonly"><label for="favoriteonly">favorite only</label>

    <div id="account_history"></div>

    <table id="usrs_note_list" border="1">
        <caption id="scap"></caption>
        <tbody id="allusrs">

        </tbody>
    </table>





    <a id="robout">


    </a>
</body>

</html>
<script>
    if ("undefined" === typeof localStorage) {
        alert("localStorage not supported")
    }
</script>
<script>

    function init_page() {
        var urls = window.location.href;
        var param = new URLSearchParams(urls)
        $("#usrname").text(param.get("SSID").slice(13))
        $("#usrname").on("click", function () {
            $(this).next().slideToggle()
        })
        var bcv = param.get("BCV")
        $("#inpBCV").val(bcv)

        $("#toggleCollapse").on("click", function () {
            $(".usrNote").slideToggle()
        })
    }
    $(function () {
        init_page()
        ajx_gen_table()
    })




    function get_usr_urls(usrname) {
        var urls = `https://bsnpghrepolist.github.io/${usrname}/myoj/e_Note_json.js`
        console.log(urls)
        return urls;
    }
    /////////////////////////////
    function ajx_gen_table() {
        function get_vrs_fr_Obj(bcv, objSrc) {
            var retOj = Uti.parse_bcv(bcv, "")
            Uti.FetchObj_UntilEnd(retOj.bcvObj, objSrc)
            var str = retOj.get_vrs()
            return str
        }
        function get_usrname_list(bcv) {
            var obj = get_vrs_fr_Obj(bcv, u_e_Note_json)
            var usrsnamelist = Object.keys(obj)
            var me = $("#usrname").text()
            var meidx = usrsnamelist.indexOf(me)
            if (meidx > 0) usrsnamelist.splice(meidx, 1), usrsnamelist.unshift(me)
            if (meidx < 0) usrsnamelist.unshift(me)
            return usrsnamelist
        }
        function get_trs(usrsnamelist) {
            var trs = ""
            usrsnamelist.forEach(function (usrnam, i) {
                var editable = "", savbtn = "", plaintextarea = "", tr_visi = ""
                if (0 === i) {
                    editable = "contenteditable='true'"
                    savbtn = `<button id='saveNote' class='floatrightside'>save</button><a class='floatrightside wordtot'>[.]</a>`
                    plaintextarea = "<textarea class='plaintxt'></textarea>"
                }
                var prvt = (!pub_users_json[usrnam]) ? "private_usr" : ""

                trs += `<tr class='usrtr ${prvt}'><td><div class='usrbar'><a class='usrnamelabel ${prvt}'>${usrnam}</a><a class='notetoggle'> -</a><a class='heart floatrightside' usrname='${usrnam}'>&#9829;</a>${savbtn}</div><div class='usrNote' id='${usrnam}_note' ${editable}></div>${plaintextarea}</td></tr>`
            })
            return trs
        }
        function ajx_get_note(usrname) {
            var bcv = $("#inpBCV").val()
            var urls = get_usr_urls(usrname)
            $("#robout").attr("href", urls).text(urls)
            $.get(urls, function (dat, err) {
                console.log(err)
                var obj = JSON.parse(dat.slice(dat.indexOf("{")))
                var vrs = get_vrs_fr_Obj(bcv, obj)
                $(`#${usrname}_note`).html(vrs)
            })
        }


        var bcv = $("#inpBCV").val()
        var usrsnamelist = get_usrname_list(bcv)
        $("#allusrs").html(get_trs(usrsnamelist))



        //////////// init //////////
        function init_load_note_all_pub() {
            $(".usrnamelabel").each(function () {
                var usrname = $(this).text()
                if (pub_users_json[usrname]) {
                    ajx_get_note(usrname)
                } else {
                    $(this).next().text("private")
                }
            })
        }
        init_load_note_all_pub()
        /////////


        function enable_heart_checked_stored() {
            $(".heart").on("click", function () {
                $(this).toggleClass("heart_red")
                var heartary = []
                $(".heart_red").each(function () {
                    heartary.push($(this).attr("usrname"))
                })
                localStorage.setItem("heart_redary", heartary.join(","))
            })
            var hearts = localStorage.getItem("heart_redary")
            if (hearts) {
                hearts.split(",").forEach(function (key) {
                    $(`a[usrname='${key}'`).addClass("heart_red")
                })
            }
        }
        enable_heart_checked_stored()

        ///radio setting
        if (1) {
            var eid = localStorage.getItem("#showmode")
            if (null == eid) eid = "defaultmode"
            $("#" + eid).attr("checked", true)
            ///////////
            $("input[name='showmode").on("click", function () {
                var id = $(this).attr("id")
                localStorage.setItem("#showmode", id)
                show_radio_checked_mode(id)
            })
            function show_radio_checked_mode(eid) {
                function show_favorite_only() {
                    $("#allusrs tr").each(function () {
                        if ($(this).find("a.heart_red").length <= 0) {
                            $(this).hide()
                        } else {
                            $(this).show()
                        }
                    })
                }
                function show_public_only() {
                    $("#allusrs tr").each(function () {
                        if ($(this).hasClass("private_usr")) {
                            $(this).hide()
                        } else {
                            $(this).show()
                        }
                    })
                }
                function show_all() {
                    $("#allusrs tr").show();
                }

                switch (eid) {
                    case "defaultmode":
                        show_public_only()
                        break;
                    case "showall":
                        show_all()
                        break;
                    case "favoriteonly":
                        show_favorite_only()
                        break;
                    default:
                        alert(eid + ":err")
                        break;
                }
            }
            show_radio_checked_mode(eid)
        }




        $(".usrnamelabel").on("click", function () {
            var usrname = $(this).text()
            if (pub_users_json[usrname]) {
                ajx_get_note(usrname)
            } else {
                $(this).next().text("private")
            }
        })

        $(".notetoggle").on("click", function () {
            var _THIS = this
            var usrname = $(this).parentsUntil("td").find(".usrnamelabel").text()
            $(`#${usrname}_note`).slideToggle("slow", function () {
                if ($(this).is(":visible")) $(_THIS).text(" -")
                else $(_THIS).text(" +")
            })
        })

        $(".wordtot").on("click", function () {
            $(".plaintxt").slideToggle()
            var htm = $(".plaintxt").prev().html()
            $(".plaintxt").val(htm)
        })

        $(".plaintxt").on("keyup", function () {
            var val = $(this).val()
            $(this).prev().html(val)
        }).prev().on("keyup", function () {
            var val = $(this).html()
            $(this).next().val(val)
        })
        $("#saveNote").on("click", function () {
            var _THIS = this
            $(this).attr("disabled", true)
            var api = new BsnpRestApi()
            var htm = $(".plaintxt").prev().addClass("RunningState").html()
            api.ApiBibleObj_write_Usr_BkcChpVrs_txt({
                fnames: ["e_Note"],
                inpObj: Uti.parse_bcv(bcv, htm).bcvObj
            },
                function (rob) {
                    $(".RunningState").removeClass("RunningState")
                    $(_THIS).attr("disabled", null)
                    $("#robout").html(JSON.stringify(rob, null, 4))

                })

        })
    }
    function api_gen_table(bcv) {
        var api = new BsnpRestApi()
        var retOj = Uti.parse_bcv(bcv, "")
        var par = { fnames: ["e_Note"] }
        par.inpObj = retOj.bcvObj
        api.ApiBibleObj_read_crossnetwork_BkcChpVrs_txt(par, function (rob) {
            console.log(rob)
            gen_table(rob.out.data)
        })

        ///
        function gen_table(obj) {
            var slst = ""
            Object.keys(obj).forEach(function (key, i) {

                slst += `<tr><td>${i}</td><td><div class='usrbar'><a class='usrname'>${key}</a><a class='heart'>&#9829;</a></div>
                <div class='enote' urls='${key}'>${obj[key]}</div></td></tr>`
            })
            $("#allusrs").html(slst)
            $(".heart").on("click", function () {
                $(this).toggleClass("heart_red")
            })
            $(".enote").on("click", function () {
                var url = get_usr_urls($(this).attr("urls"))
                $.get(url, function (dat, stat) {
                    console.log(dat, stat)

                })
            })

        }
    }

</script>