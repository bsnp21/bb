<!DOCTYPE html>
<!--
Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.
For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
-->
<html>

<head>
    <title>Diary</title>
    <basexxxxx target="xxx_blank" />
    <META http-equiv="Content-Type" content="text/html;" charset="UTF-8">
    <META name="viewport" content="width=device-witdh, initial-scale=1, maximum-scale=1, user-scale=0">

    <!-------------------------------------------->
    <!---- Insert this before scripts import; then restor back later -->
    <script>//if (typeof module === 'object') { window.module = module; module = undefined; }</script>

    <!-------------- jq --------------------->
    <script ____src="./doc_files/jquery-2_1_3.min.js"></script>
    <script src="https://wdingbox.github.io/ham12/jq/jquery-2_1_3.min.js"></script>
    <script xxxxxxxsrc="http://localhost:7878/assets/ckeditor/adapters/jq/jquery-2_1_3.min.js"
        note="selfseversite"></script>

    <!-------------------------------------------->

    <script src="./js/BsnpRestConst.js"></script>
    <script src="./js/BsnpRestApi.js"></script>


    <script src="./js/MyStorage.js"></script>


    <!----- Insert this line after script imports -->
    <script>//if (window.module) module = window.module;</script>
    <!-------------------------------------------->
    <style>
        table {
            margin-bottom: 500px;
        }

        td {}

        td[contenteditable='true'] {
            background-color: aqua;
            vertical-align: top;
        }

        .hili {
            background-color: coral;
        }

        .savedok {
            background-color: lightgreen;
        }

        .vertxt {
            display: flex;
            justify-content: center;
            align-items: center;
            writing-mode: vertical-lr;
            min-height: 1em;
            line-height: 1em;

        }
    </style>
    <script>
        var parm = window.location.search
        if (!parm) { alert("no search parameters in url.") }

        function init_dat() {
            $("#clear_diary").on("click", function () {
                if (!confirm("reset data?")) return
                var par = {
                    "fnames": [
                        "./dat/MyBiblicalDiary"
                    ],
                    "data": {
                        "2022": null
                    }
                }

                var api = new BsnpRestApi()
                var _this = this

                api.ajaxion(
                    RestApi.ApiUsrDat_save,
                    par,
                    function (ret) {
                        console.log("ret", ret.out.data)
                        $("#outputdat").text(`ret = ${JSON.stringify(ret, null, 4)}`)
                        if (ret.out.err) {
                            alert("load failed ret.out.err= " + ret.out.err)
                        }
                    })
            })
        }

        function init_load() {
            var par = {
                "fnames": [
                    "./dat/MyBiblicalDiary"
                ],
                "data": {
                }
            }
            var yyyy = (new Date()).toISOString().substr(0, 4)
            par.data[yyyy] = {}

            //<a id="calenderpage" href="https://bsnp21.github.io/tools/calendars/calendar3yr.htm">calendar</a>
            var old_href = $("#calenderpage").attr("href")
            $("#calenderpage").attr("href", `${old_href}${window.location.search}`)

            var api = new BsnpRestApi()
            api.ajaxion(
                RestApi.ApiUsrDat_load,
                par,
                function (ret) {
                    console.log("ret", ret.out.data)
                    $("#outputdat").text(`ret = ${JSON.stringify(ret, null, 4)}`)
                    gen_table(ret.out.data, yyyy)
                    if (ret.out.err) {
                        alert("load failed ret.out.err= " + ret.out.err)
                    }
                })
        }
        function gen_table(retObj, yyyy) {
            init_cap(yyyy)
            if (!retObj.hasOwnProperty(yyyy)) {
                retObj[yyyy] = {}
            }
            var mmdd = (new Date()).toISOString().replace(/\-/g, "").substr(4, 4)
            if (!retObj[yyyy].hasOwnProperty(mmdd)) {
                retObj[yyyy][mmdd] = "-" + mmdd
            }
            var str = "", i = 0
            for (key in retObj[yyyy]) {
                str += `<tr><td class='idx'>${i++}</td><td class='datime' y4='${yyyy}' title='${yyyy}'><a class='vertxt'>${key}</a></td><td class='edtxt'>${retObj[yyyy][key]}</td></tr>`
            }

            $("#outb").html(str)
            $(".edtxt").on("click", function () {
                $(this).attr("contenteditable", "true")
            })
            $(".datime").on("click", function () {
                var _THIS = this
                $(".hili").removeClass("hili")
                $("#outputdat").text(".")

                $(this).addClass("hili")
                var editable = $(this).next().attr("contenteditable")
                if (editable === "true") {
                    if (!confirm("save?")) {
                        $(_THIS).next().attr("contenteditable", null)
                        return
                    }
                } else {
                    return
                }
                $(_THIS).next().attr("contenteditable", null)
                var txt = $(this).next().html()
                var mmdd = $(this).text().toString()
                var yyyy = $(this).attr("y4")
                save_txt(yyyy, mmdd, txt, function (ret) {
                    $("#outputdat").text(`ret = ${JSON.stringify(ret, null, 4)}`)
                    $(_THIS).next().addClass("savedok")
                    if (ret.out.err) {
                        alert("load failed ret.out.err= " + ret.out.err)
                    }
                })
            })
        }
        function save_txt(yyyy, mmdd, txt, cbf) {
            var par = {
                "fnames": [
                    "./dat/MyBiblicalDiary"
                ],
                "data": {}
            }

            par.data[yyyy] = {}
            par.data[yyyy][mmdd] = txt

            var api = new BsnpRestApi()
            var _this = this
            //$(_this).next().text('...')
            $("#outputdat").text(`par = ${JSON.stringify(par, null, 4)}`)
            api.ajaxion(
                RestApi.ApiUsrDat_save,
                par,
                function (ret) {
                    console.log("ret", ret.out.data)
                    if (cbf) cbf(ret)
                })
        }
        $(function () {
            init_dat()
            init_load()
            $("#init_load").on("click", function () {
                $("#outputdat").text("run...")
                init_load()
            })

        })
        function init_cap(yyyy) {
            var str = window.location.search
            var sea = new URLSearchParams(window.location.search)
            var usr = sea.get("repo")
            $("#cap").text(yyyy + ": " + usr)
        }
    </script>
</head>

<body onbeforeunload="return 'leave?';">

    <a id="calenderpage" href="./calendars/calendar3yr.htm">calendar</a>

    <table border="1">
        <caption id="cap"></caption>
        <thead>
            <tr>
                <th>#</th>
                <th>md</th>
                <th>Contents of Biblical Diary</th>
            </tr>
        </thead>
        <tbody id="outb">

        </tbody>
    </table>
    <pre id="outputdat"></pre>
    <button id="init_load">init_load</button>
    <a id="clear_diary">.</a>
    <a contenteditable=""></a>
</body>

</script>
<!----
Jesus did not recommend us to take part in politics. But He did not curse politicians, Through politics, we can know the world, and through it, we can know the sign of the world, the will of God, to testify what Jesus ever said to us, the power of Jesus.--
-->