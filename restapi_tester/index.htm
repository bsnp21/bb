<HTML>

<HEAD>
    <TITLE>test</TITLE>
    <base target="_blank" />
    <META http-equiv="Content-Type" content="text/html;" charset="UTF-8">
    <META name="viewport" content="width=device-witdh, initial-scale=1, maximum-scale=1, user-scale=0">



    <!--------->
    <!----------------------------------------------------------------------------->
    <!----------------------------------------------------------------------------->
    <script language="javascript"
        src="https://cdnjs.cloudflare.com/ajax/libs/jsencrypt/2.3.1/jsencrypt.min.js"></script>

    <script language="javascript" src="../jq/jquery.js"></script>

    <!----------------------------------------------------------------------------->
    <!------ api ---->
    <script src="https://bsnp21.github.io/home/js/config_websvr_data.js"></script>
    <script src="../np/js/BsnpRestApi.js"></script>
    <script src="../np/js/CNST.js"></script>
    <!----------------------------------------------------------------------------->


    <style>
        input {
            width: 500px;
        }

        .hili {
            background-color: red;
        }

        pre[contenteditable] {
            background-color: lightsalmon;
        }
    </style>
    <script>


        $(function () {
            $("#get_api_svrip_https").on("click", function () {
                var urls = `https://${config_websvr_data.ip}:${config_websvr_data.https_port}`
                $(this).next().text(`?ip=${urls}`).attr("href", `?ip=${urls}`)
            })
            $("#get_api_svrip_http").on("click", function () {
                var urls = `http://${config_websvr_data.ip}:${config_websvr_data.http_port}`
                $(this).next().text(`?ip=${urls}`).attr("href", `?ip=${urls}`)
            })

            $("#api_signin_ip").on("click", function () {
                $(this).addClass("hili")
                var usr = {}
                usr.repopath = $("#repopath").val()
                usr.passcode = $("#passcode").val()
                usr.ttl = $("#ttl").val()

                var api = new BsnpRestApi()
                api.signin(usr, function (rob, err) {
                    $("#api_signin_ip").removeClass("hili")
                    console.log(rob)

                    if (err) {
                        console.log(rob, ur)
                        alert("failed")
                    } else {
                        var ur = `${api.urlRedirectParam()}`
                        //alert("ok=\n" + ur)
                        $("#api_signin_ip").next().attr("href", `${ur}`).text(ur).parent().append(`<pre>${JSON.stringify(rob, null, 4)}</pre>`)
                        console.log(rob, ur)

                    }
                })
            })

            $("#sign_out").on("click", function () {
                if (!confirm("Are you sure to sign out? \n\n (it could be destroyed permenantly).")) return;

                $(this).addClass("hili")
                var api = new BsnpRestApi()
                api.ajaxion(RestApi.ApiUsrReposData_destroy, {}, function (ret) {
                    //$("body").attr("onbeforeunload", null)
                    $("#sign_out").removeClass("hili").next().append(`<pre>${JSON.stringify(ret, null, 4)}</pre>`)
                    if (confirm("reload?")) window.open("./index.htm", "_self")
                })
            })

            gen_api_sam()


            gen_BibleNames()
            gen_bibOjStdKeys()
        })


        function gen_api_sam() {
            var sample_apiPar = {
                ApiBibleObj_load_by_bibOj: { fnames: ['NIV', 'CUVS'], bibOj: { Gen: { 1: { 1: '' } } } },
                ApiBibleObj_write_Usr_BkcChpVrs_txt: { fnames: ['e_v_CUVs_enn2'], inpObj: { Gen: { '1': { '1': 'in the beginning' } } } },
                ApiBibleObj_search_txt: { fnames: ['NIV', 'e_Note'], bibOj: { Gen: {} }, Search: { File: "NIV", Strn: "Melchizedek" } },
                ApiUsrDat_load: {
                    fnames: ["./dat/MostRecentVerses"], //MostRecentSearches
                    data: {"RecentTouch": {}}
                },
                ApiUsrDat_save: {
                    fnames: ["./dat/MostRecentVerses"], //MostRecentSearches
                    data: JSON.stringify({ "testkey": { "Gen1:1": "1000", "Gen2:1": "2000" } })
                },
            }

            var lis = ""
            for (key in sample_apiPar) {
                lis += `<li><button class="restapi_label">${key}</button><pre contenteditable='true'>${JSON.stringify(sample_apiPar[key])}</pre><pre></pre></li>`
            }
            $("#apiIdStr").html(lis)

            $(".restapi_label").on("click", function () {
                var _this = this
                var txt = $(this).next().text()
                var par = {}
                try {
                    par = JSON.parse(txt)
                } catch {
                    return alert("err:" + txt)
                }
                var sApiNameID = $(this).text()
                var api = new BsnpRestApi()
                api.ajaxion(
                    sApiNameID,
                    par,
                    function (ret) {
                        console.log("ret", ret.out.data)
                        $(_this).next().next().text(`<pre>${JSON.stringify(ret, null, 4)}</pre>`)
                        if (ret.out.data) {
                        } else {
                            alert("load failed. ")
                        }
                    })
            })
        }
        function gen_BibleNames() {
            var trs = ""
            var ar = Object.keys(CNST.FnameOfBibleObj).concat(["./dat/MostRecentVerses", "./dat/MostRecentSearches"])
            ar.forEach(function (key, i) {
                var stp = "<td>read</td><td></td><td>search</td>"
                if (key[0] === 'e') stp = "<td>read</td><td>write</td><td>search</td>"
                if (key[0] === '.') stp = "<td>read</td><td>write</td><td></td>"
                trs += `<tr><td>${i + 1}</td><td>${key}</td>${stp}</tr>`
            })

            $("#BibleNames").html(`<table border='1'>${trs}</table>`)
        }
        function gen_bibOjStdKeys() {
            var lis = ""
            for (key in CNST.BiBookName) {
                lis += `<li>${key}</li>`
            }
            $("#bibOjStdKeys").html(lis)

        }


    </script>



</HEAD>

<BODY>
    <ol>
        <li>
            <h3 id="">api server ip for url param</h3>
            <button id="get_api_svrip_https">get api server ip (https)</button><a>./</a><br>
            <button id="get_api_svrip_http" href="">get api server ip (http)</button><a>./</a><br><br>
        </li>

        <li>
            <h3>Repository</h3>
            repopath:<input id="repopath" value="https://wdingsoft@bitbucket.org/bsnp21/guest_02.git"></input><br>
            passcode:<input id="passcode" value="gSzk" val2="TPgFNnz" v3="9v5wGF5eN"
                onclick="$(this).val('gSzk'+'TPgFNnz'+'9v5wGF5eN')"></input><br>
            ttl<input id="ttl" value="9999"></input>
        </li>

        <li>
            <h3 id="">signin ip</h3>
            <button id="api_signin_ip">BsnpRestApi.signin: </button><a>add SSID on url param</a><br>
        </li>

        <li>
            <h3>sign out</h3>
            <button id="sign_out">ApiUsrReposData_destroy</button> <a>...</a>
        </li>
        <li>
            <h3>BsnpRestApi.ajaxion </h3>
            <ol id="apiIdStr">
            </ol>
        </li>
        <li>
            <h3>Available fnames or Research.File </h3>
            <ol id="BibleNames">
            </ol>
        </li>
        <li>
            <h3>bibOj std keys</h3>
            <ol id="bibOjStdKeys"></ol>
        </li>
    </ol>

</BODY>

</HTML>